@use "sass:map";
@use "sass:math";
@use "sass:list";
@use "config" as *;

// Breakpoints
$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1280px,
  xxl: 1536px,
);

@function breakpoint($size) {
  @return map.get($breakpoints, $size);
}

// ScaleFactor controls the relative scale of spacing. Increasing scaleFactor 
// will increase the spacing and visa versa.
$scaleFactor: 1; // IMP: ADJUST FOR DIFF STYLES

$goldenRatio: 1.618;
$lineHeightIns: 1em * $goldenRatio;

//Incrents
$wholestep: $goldenRatio;
$halfstep: math.sqrt($wholestep);
$quarterstep: math.sqrt($halfstep);
$eighthstep: math.sqrt($quarterstep);

$wholestep-dec: $wholestep - 1;
$halfstep-dec: $halfstep - 1;
$quarterstep-dec: $quarterstep - 1;
$eighthstep-dec: $eighthstep - 1;

$whole-md: calc($scaleFactor * $wholestep) + em;
$whole-sm: calc($scaleFactor * $wholestep * $wholestep-dec) + em;
$whole-xs: calc($scaleFactor * $wholestep * $halfstep-dec) + em;
$whole-xxs: calc($scaleFactor * $wholestep * $quarterstep-dec) + em;
$whole-lg: calc($scaleFactor * $wholestep * $wholestep) + em;
$whole-xl: calc($scaleFactor * $wholestep * $wholestep * $wholestep) + em;
$whole-xxl: calc($scaleFactor * $wholestep * $wholestep * $wholestep * $wholestep) + em;

$half-md: calc($scaleFactor * $halfstep) + em;
$half-sm: calc($scaleFactor * $halfstep * $wholestep-dec) + em;
$half-xs: calc($scaleFactor * $halfstep * $halfstep-dec) + em;
$half-xxs: calc($scaleFactor * $halfstep * $quarterstep-dec) + em;
$half-lg: calc($scaleFactor * $halfstep * $wholestep) + em;
$half-xl: calc($scaleFactor * $halfstep * $wholestep * $wholestep) + em;
$half-xxl: calc($scaleFactor * $halfstep * $wholestep * $wholestep * $wholestep) + em;

$quarter-md: calc($scaleFactor * $quarterstep) + em;
$quarter-sm: calc($scaleFactor * $quarterstep * $wholestep-dec) + em;
$quarter-xs: calc($scaleFactor * $quarterstep * $halfstep-dec) + em;
$quarter-xxs: calc($scaleFactor * $quarterstep * $quarterstep-dec) + em;
$quarter-lg: calc($scaleFactor * $quarterstep * $wholestep) + em;
$quarter-xl: calc($scaleFactor * $quarterstep * $wholestep * $wholestep) + em;
$quarter-xxl: calc($scaleFactor * $quarterstep * $wholestep * $wholestep * $wholestep) + em;

@mixin whole-spacing {
  --md: #{$whole-md};
  --sm: #{$whole-sm};
  --xs: #{$whole-xs};
  --xxs: #{$whole-xxs};
  --lg: #{$whole-lg};
  --xl: #{$whole-xl};
  --xxl: #{$whole-xxl};
}

@mixin half-spacing {
  --md: #{$half-md};
  --sm: #{$half-sm};
  --xs: #{$half-xs};
  --xxs: #{$half-xxs};
  --lg: #{$half-lg};
  --xl: #{$half-xl};
  --xxl: #{$half-xxl};
}

@mixin quarter-spacing {
  --md: #{$quarter-md};
  --sm: #{$quarter-sm};
  --xs: #{$quarter-xs};
  --xxs: #{$quarter-xxs};
  --lg: #{$quarter-lg};
  --xl: #{$quarter-xl};
  --xxl: #{$quarter-xxl};
}

// Typography (unitless)
$typo-vars: (
  display1: (letter-spacing: -0.022em,
    font-size: ($wholestep * $wholestep * $wholestep) + em,
    padding: $scaleFactor * ($wholestep * $wholestep * $wholestep) + em,
    font-weight: 400,
    font-weight-bold: 700,
    line-height: $quarterstep,
    corrected-padding: $scaleFactor * calc(($wholestep * $wholestep * $wholestep) / $quarterstep) + em,
  ),
  display2: (letter-spacing: -0.022em,
    font-size: ($wholestep * $wholestep) + em,
    padding: $scaleFactor * ($wholestep * $wholestep) + em,
    font-weight: 400,
    font-weight-bold: 700,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(($wholestep * $wholestep) / $halfstep) + em,
  ),
  title1: (letter-spacing: -0.022em,
    font-size: ($wholestep * $halfstep) + em,
    padding: $scaleFactor * ($wholestep * $halfstep) + em,
    font-weight: 400,
    font-weight-bold: 700,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(($wholestep * $wholestep) / $halfstep) + em,
  ),
  title2: (letter-spacing: -0.022em,
    font-size: ($wholestep) + em,
    padding: $scaleFactor * ($wholestep) + em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(($wholestep * $halfstep) / $halfstep) + em,
  ),
  title3: (letter-spacing: -0.017em,
    font-size: $halfstep + em,
    padding: $scaleFactor * $halfstep + em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * 1em,
  ),
  heading: (letter-spacing: -0.014em,
    font-size: $quarterstep + em,
    padding: $scaleFactor * $quarterstep + em,
    font-weight: 600,
    font-weight-bold: 700,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc($quarterstep / $halfstep) + em,
  ),
  subheading: (letter-spacing: -0.007em,
    font-size: calc(1 / $quarterstep) + em,
    padding: $scaleFactor * calc(1 / $quarterstep) + em,
    font-weight: 600,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(calc(1 / $quarterstep) / $halfstep) + em,
  ),
  body: (letter-spacing: -0.011em,
    font-size: 1em,
    padding: $scaleFactor * 1em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $wholestep,
    corrected-padding: $scaleFactor * calc(1 / $wholestep) + em,
  ),
  callout: (letter-spacing: -0.009em,
    font-size: calc(1 / $eighthstep) + em,
    padding: $scaleFactor * calc(1 / $eighthstep) + em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(calc(1 / $eighthstep) / $halfstep) + em,
  ),
  label: (letter-spacing: -0.004em,
    font-size: calc(calc(1 / $quarterstep) / $eighthstep) + em,
    padding: $scaleFactor * calc(calc(1 / $quarterstep) / $eighthstep) + em,
    font-weight: 500,
    font-weight-bold: 700,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(calc(calc(1 / $quarterstep) / $eighthstep) / $halfstep) + em,
  ),
  caption: (letter-spacing: -0.007em,
    font-size: calc(1 / $halfstep) + em,
    padding: $scaleFactor * calc(1 / $halfstep) + em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(calc(1 / $halfstep) / $halfstep),
  ),
  overline: (letter-spacing: 0.0618em,
    font-size: calc(1 / $halfstep) + em,
    padding: $scaleFactor * calc(1 / $halfstep) + em,
    font-weight: 400,
    font-weight-bold: 600,
    line-height: $halfstep,
    corrected-padding: $scaleFactor * calc(calc(1 / $halfstep) / $halfstep) + em,
  ),
);

// default element and font-weight
$typo-default-elements: (
  caption: (caption, 400),
  body: (p, 400),
  heading: (h6, 700),
  title3: (h5, 600),
  title2: (h4, 600),
  title1: (h3, 700),
  display2: (h2, 700),
  display1: (h1, 700),
);

@function typography($size, $var) {
  @return map.get(map.get($typo-vars, $size), $var)
}

@function typography-element-map($size, $var) {
  @return list.nth(map.get(map.get($typo-default-elements, $size), $var), 1)
}



// Style Variables
$global-border-radius: 10em; // IMP: ADJUST FOR DIFF STYLES

// Button Variables
$button-font-label: label;
$button-font-weight: typography($button-font-label, font-weight-bold);
$button-font-size: calc(typography($button-font-label, font-size) * $quarterstep);

// Icons 
// Add the following <link> element to <head> in html to load icons.
// Update "Rounded" to desired icon style.
// <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
$icon-font-style: Rounded; // Outlined, Rounded, or Sharp.
$icon-font-family: Material Symbols $icon-font-style;
$icon-font-size: 1.272em;
$icon-padding: var(--sm); // IMP: ADJUST FOR DIFF STYLES
$icon-border-width: var(--xxs); // IMP: ADJUST FOR DIFF STYLES
$icon-fill: 1; // 1 for filled, 0 for outlined
$icon-wght: 400;
$icon-grad: 0;
$icon-opsz: 24;
$icon-height: calc($icon-font-size + calc($icon-padding * 2));
$icon-border: $icon-border-width solid transparent;
$icon-background: inherit;
$icon-color: inherit;

// Transitions
$transition: 0.2s ease-in-out;

// Font
$fontSize: 1rem;

$fontFamilyEmoji: "Apple Color Emoji",
  "Segoe UI Emoji",
  "Segoe UI Symbol",
  "Noto Color Emoji";
$fontFamilySans: system-ui,
  "Segoe UI",
  Roboto,
  Oxygen,
  Ubuntu,
  Cantarell,
  Helvetica,
  Arial,
  "Helvetica Neue",
  sans-serif;
$fontFamilyMonospace: ui-monospace,
  SFMono-Regular,
  "SF Mono",
  Menlo,
  Consolas,
  "Liberation Mono",
  monospace;
$fontFamilyHeading: #{$fontFamilySans};
$fontFamilyMain: #{$fontFamilySans};
$underlineOffset: 0.2em;

// Colors
$highlight: var(#{$color-prefix}-primary);
$highlightActive: var(#{$color-prefix}-secondary);
$highlightHover: var(#{$color-prefix}-on-primary-container);

// Border
$borderColor: var(#{$color-prefix}-outline-variant);
$borderWidth: 1px;
$borderWidthThick: 4px;
$borderStyle: solid;
$borderRadius: var(--xs, 0.2em);
$border: $borderWidth $borderStyle $borderColor;
$borderTransparent: $borderWidth $borderStyle transparent;
$borderHighlight: $borderWidthThick $borderStyle $highlight;

// Layout
$menu-width: 210px;
$sidebar-width: 210px;

// Navbar
$navbar-height: 100px;
$sticky-header: true;

// Layout Padding
$container-padding-horizontal: var(--xl);
$container-padding-vertical: var(--md);
$section-flow: var(--lg);

// Input + Forms
$icon-checkbox: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='rgb(255, 255, 255)' stroke-width='4' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");
$border-radius-circle: 50em;

$input-border-radius: 0.2em;
$input-border-width: 1px;
$input-color-surface: $borderColor;
$input-color-onsurface: white;
$input-color-font: var(--md-sys-color-on-surface);
$input-color-element-bg: var(--md-sys-color-surface);
$input-color-active: var(--md-sys-color-primary);
$input-color-accent: var(--md-sys-color-primary-container);

$input-outline: $input-border-width solid $input-color-accent;
$input-border: $input-border-width solid $input-color-surface;
$input-border-active: $input-border-width solid $input-color-active;
$input-border-hidden: $input-border-width solid var(--bg-color);
$input-border-invalid: $input-border-width solid var(--md-sys-color-error);
$input-border-valid: $input-border-width solid var(--md-sys-color-success-color);

