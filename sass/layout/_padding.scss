// Semantic containers with .container-fluid option
@use "../abstracts" as *;

// Horizontal Padding
body>footer,
body>header,
body>main>hgroup,
body>main>[role="document"] {
  padding: 0 $container-padding-horizontal;

  &>section {
    margin-left: calc(-1 * $container-padding-horizontal);
    margin-right: calc(-1 * $container-padding-horizontal);
    padding-right: $container-padding-horizontal;
    padding-left: $container-padding-horizontal;
  }

  @media screen and (max-width: breakpoint(md)) {
    & {
      padding: 0 calc($container-padding-horizontal * $wholestep-dec);
    }

    &>section {
      margin-left: calc(-1 * $container-padding-horizontal * $wholestep-dec);
      margin-right: calc(-1 * $container-padding-horizontal * $wholestep-dec);
      padding-left: calc($container-padding-horizontal * $wholestep-dec);
      padding-right: calc($container-padding-horizontal * $wholestep-dec);
    }
  }

  @media screen and (max-width: breakpoint(sm)) {
    & {
      padding: 0 calc($container-padding-horizontal * $halfstep-dec);
    }

    &>section {
      margin-left: calc(-1 * $container-padding-horizontal * $halfstep-dec);
      margin-right: calc(-1 * $container-padding-horizontal * $halfstep-dec);
      padding-left: calc($container-padding-horizontal * $halfstep-dec);
      padding-right: calc($container-padding-horizontal * $halfstep-dec);
    }
  }
}

// Vertical Padding
section,
body>main>hgroup,
body>main>[role="document"] {
  padding-top: $container-padding-vertical;
  padding-bottom: $container-padding-vertical;
}

.container-fluid {
  padding-left: 0 !important;
  padding-right: 0 !important;
}
