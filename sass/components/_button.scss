@use "../abstracts" as *;
@use "../base" as *;
@use "../utilities" as *;

button {

  & {
    @include font($button-font-label);
    @include border-transparent;
    @include bg-primary;
    @include state-layer;
    font-weight: $button-font-weight;
    font-size: $button-font-size;
    border-radius: $global-border-radius;
    padding: 0 calc($icon-padding * 2 + $icon-border-width);
    min-height: calc($icon-height + $icon-border-width * 2);
    min-width: calc($icon-height + $icon-border-width * 2);
    align-self: center; // prevent streching when inside a div
  }

  // Utilities
  &.icon.border::before,
  &.border {
    @include border;
  }

  &.text {
    @include bg-transparent;
  }

  &.large {
    font-size: calc($button-font-size * $halfstep);
  }

  &.icon {
    @include bg-transparent;
    padding: 0;
    border: none;
    flex-direction: column;
    gap: 0.1em;
  }

  &.icon::before {
    @include border-transparent;
  }

  &.icon::after {
    height: calc($icon-height);
    width: calc($icon-height);
    margin-left: auto;
    margin-right: auto;
  }

  &:has(>.data-icon) {
    padding-left: 0;
    padding-right: 0;
  }

  &[data-placement="bottom"].icon::after {
    top: calc(var(--md) * var(--halfstep));
  }

  &[data-placement="right"].icon::after {
    margin-top: auto;
    margin-bottom: auto;
    left: calc(var(--md) * var(--halfstep));
  }

  &[data-placement="left"].icon::after {
    margin-top: auto;
    margin-bottom: auto;
    right: calc(var(--md) * var(--halfstep));
  }
}
